----------------------------------------------------
Green Ruby News #192 - oct 9th 2016
----------------------------------------------------
*|IFNOT:CONTENT=Only Rant|*

Look
----------------------------------------------------
Examples of UI/UX, graphic performance, web design and flashy things.

*RSQ* (design)
http://www.rsq.com/
An award-winning digital agency.

*GitHub Audio* (design)
https://github.audio/
The music of github events.

Use
----------------------------------------------------
Web applications, resources and tools, available for making our life easier or funnier.

*Dead Man's Switch* (tool)
https://www.deadmansswitch.net/
Set up emails to be sent out after your death.

*Cat Ipsum* (tool)
http://www.catipsum.com/
Litter your copy with more kitty using this furrier alternative to Lorem Ipsum.

*Art of README* (tool)
https://github.com/noffle/art-of-readme
Learn the art of writing quality READMEs.

Install
----------------------------------------------------
A selection of gems or applications updated during past week.

*Hyperloop* (rb)
http://ruby-hyperloop.io/
Ruby frontend libraries. Write React in ruby.

*Faker* (rb)
https://github.com/stympy/faker
A library for generating fake data such as names, addresses, and phone numbers.

*whirly* (rb)
https://github.com/janlelis/whirly
Colorful Terminal Spinner for Ruby.

*Central* (rb)
https://github.com/Codeminer42/cm42-central
An agile project planning tool and Pivotal Tracker drop-in replacement

*Fukol* (css3)
https://github.com/Heydon/fukol-grids
A grid framework that holds in a tweet, with an attitude.

*Typora* (tool)
https://www.typora.io/
A minimal markdown editor.

Read
----------------------------------------------------
From the blogosphere or news feeds ...

*Beware the ORM: Locking and Joins* (rb - oct 2)
http://travisofthenorth.com/blog/2016/10/2/beware-the-orm
Knowing how original SQL generated by ORM and how it interacts with Rails is important.

*Sharing models between Rails Apps* (rb - oct 3)
http://www.akitaonrails.com/2016/10/03/sharing-models-between-rails-apps-part-1
For some situations you can organize your models logic into Ruby modules then move them out to a Rubygem.

*Parslet* (rb - oct 3)
https://asok.github.io/ruby/2016/10/03/parslet.html
Parslet allows you to write a parser that will take the input String (our query) and create a syntax tree.

*How it feels to learn JavaScript in 2016* (js - oct 3)
https://hackernoon.com/how-it-feels-to-learn-javascript-in-2016-d3a717dd577f
What does it feel like to be a modern front end engineer.

*Building a Rack Web Server in Ruby* (rb - oct 4)
https://ksylvest.com/posts/2016-10-04/building-a-rack-web-server-in-ruby
Rack is an interface for structuring web applications using Ruby.

*Ruby Versions Used in Commercial Projects, 2016 Edition* (rb - oct 4)
https://semaphoreci.com/blog/2016/10/04/ruby-versions-used-in-commercial-projects-2016-edition.html
Most people are starting with the latest versions.

*Test-Driven Development* (web - oct 5)
http://neverworkintheory.org/2016/10/05/test-driven-development.html
This painstaking study is the latest in a long line to find that test-driven development (TDD) has little or no impact on development time or code quality.

*Let The Asset Pipeline Die* (rb - oct 5)
http://gilesbowkett.blogspot.tw/2016/10/let-asset-pipeline-die.html
Rails hate against javascript is deranged.

. . . . . . . . . . . . . . . . . . . . . . . . . .
Links curated by by mose (publisher), xenor, tysliu (editors), nauman, tysliu (contributors).
*|END:IF|*
*|IFNOT:CONTENT=Only Links|*

Rant
----------------------------------------------------
The random rant of the week by mose.

#### The JS toolback hell

This week I laughed a lot while reading [How it feels to learn JavaScript in
2016][js2016]. That article had a pretty [good response][gas], like it hits a
nerve.

But seriously it's clear that we are at a transition time in Javascript
evolution, and there is a huge chaos of possible alternatives to everything.
It feels like an ecosystem where the natural selection didn't operate its
magic yet. It's like there are things in suspension that are going to fall in
order at some point eventually.

My personal bet is that things like elm will win the race, because with its
embrace of functional programming it seems like it opens the door to
interpretation with yet-to-be-written faster and more direct compilers (rather
than transpiling to js). But that's just a hunch.

In the while, front-end craft is now a wizard arcane art. It can't be acquired
by pure reasoning and logic, or reading a doc. You need the map of the
landscape for knowing the possible choices and alternative intermediary
solutions. For part-time front-end people, it's just hell. For now.

[js2016]: https://hackernoon.com/how-it-feels-to-learn-javascript-in-2016-d3a717dd577f#.pl6hx94d3
[gas]: http://www.macwright.org/2016/10/04/everything-is-fine-with-javascript.html 

*|END:IF|*

====================================================
EOF

Feel free to send us feedback or information at
news@greenruby.org

follow on Twitter @greenrubist
forward to a friend *|FORWARD|*
Subscribe *|LIST:SUBSCRIBE|*

Copyright (c) *|CURRENT_YEAR|* Mose
http://creativecommons.org/licenses/by-sa/3.0/
This publication is licensed under a
Creative Commons Attribution-ShareAlike 3.0 License




