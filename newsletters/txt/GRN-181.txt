----------------------------------------------------
Green Ruby News #181 - jul 24th 2016
----------------------------------------------------
*|IFNOT:CONTENT=Only Rant|*

Look
----------------------------------------------------
Examples of UI/UX, graphic performance, web design and flashy things.

*Resn* (design)
http://resn.co.nz
Creative digital agency website.

Use
----------------------------------------------------
Web applications, resources and tools, available for making our life easier or funnier.

*crontab.guru* (tool)
http://crontab.guru/
Cron schedule expression editor

*vimgifs* (tool)
https://vimgifs.com/
Animated gifs with vim tips and tricks.

*webmock.io* (tool)
http://www.webmock.io/
Mocking http services made easy

Install
----------------------------------------------------
A selection of gems or applications updated during past week.

*TuneMyGC* (rb)
https://github.com/bear-metal/tunemygc
Hand-tuning the GC parameters is a slippery slope to navigate for most developers.

*john_hancock* (rb)
https://github.com/Brantron/john_hancock
A Rails gem for custom signature form fields.

*down* (rb)
https://github.com/janko-m/down
A wrapper around open-uri standard library for safe downloading of remote files.

*worque* (rb)
https://github.com/huynhquancam/worque
a CLI to manage your daily notes

*BlazeCSS* (css3)
http://blazecss.com/
Modular CSS framework

*hack.css* (css3)
http://hackcss.com/
dead simple css framework

*jquery-cron* (js)
http://shawnchin.github.io/jquery-cron/
Plugin for presenting a simplified interface for users to specify cron entries

*Vault* (tool)
https://www.vaultproject.io/
A tool for managing secrets.

Read
----------------------------------------------------
From the blogosphere or news feeds ...

*Partial Downloads with Enumerators and Fibers* (rb - jul 18)
https://twin.github.io/partial-downloads-with-enumerators-and-fibers/
Determining the MIME type from file content without the full file.

*A Review of Code Reloaders for Ruby* (rb - jul 18)
http://rosenfeld.herokuapp.com/en/articles/ruby-rails/2016-07-18-a-review-of-code-reloaders-for-ruby
A dive into code reloading.

*A CGI application vulnerability for PHP, Go, Python and others* (ops - jul 18)
http://seclists.org/oss-sec/2016/q3/95
Upgrade your go builds, Httpoxy plague in sight.

*Hiding secrets in a Vault* (rb - jul 19)
https://infinum.co/the-capsized-eight/articles/hiding-secrets-in-vault
Using Vault, Github authentication and 'secrets' gem to make secret files more secure.

*Automate Docker with the Remote API and Ruby* (rb - jul 20)
https://www.sitepoint.com/automate-docker-with-the-remote-api-and-ruby/
If you used Docker up to this point, it’s likely been via the command-line interface which is actually a client that uses the Remote API.

*New Features in Ruby 2.4* (rb - jul 20)
https://blog.blockscore.com/new-features-in-ruby-2-4/
Checkout some new methods and improvements on old methods.

*How To Use Arguments And Parameters In ECMAScript 6* (js - jul 20)
https://www.smashingmagazine.com/2016/07/how-to-use-arguments-and-parameters-in-ecmascript-6/
Use rest parameters, default values and destructuring, among other new features.

*React.js in patterns* (js - jul 20)
http://krasimirtsonev.com/blog/article/react-js-in-design-patterns
Techniques that are applied over and over again in react code.

*The Goal of Performance Tuning* (web - jul 20)
https://blog.codeship.com/goal-performance-tuning/
Make a goal, take measurements, fix the bottleneck, then repeat.

*respond_to |format| is useful even without multiple formats* (rb - jul 21)
http://blog.arkency.com/2016/07/respond-to-format-is-useful-even-without-multiple-formats/
The hidden benefits of respond_to.

*Web applications on Phusion Passenger are not vulnerable to HTTPoxy* (rb - jul 21)
https://blog.phusion.nl/2016/07/21/web-applications-on-phusion-passenger-are-not-vulnerable-to-httpoxy/
Some more details on Httpoxy vulnerability.

*Getting Started With Vue.js* (js - jul 21)
https://www.sitepoint.com/getting-started-with-vue-js/
Vue.js is a JavaScript library to build web applications using the the MVVM (Model-View-ViewModel) pattern.

*Learning to COPE with Microservices* (web - jul 22)
https://css-tricks.com/learning-cope-microservices/
The beauty of building with microservices is that it works for projects of any size.

*Consider Turbolinks 5 for Your Next Rails Project* (rb - jul 23)
http://aspiringwebdev.com/consider-turbolinks-5-for-your-next-rails-project/
Turbolinks 5 is a library for web applications that makes pages load faster.

*Rbenv — How it works* (rb - jul 23)
https://medium.com/@Sudhagar/rbenv-how-it-works-e5a0e4fa6e76
The file .rbenv-shim gets created during the rehash process to indicate a rehash is in progress.

. . . . . . . . . . . . . . . . . . . . . . . . . .
Links curated by by mose (publisher), xenor, tysliu (editors), hsatac, michaelweigle, mose, nauman (contributors).
*|END:IF|*
*|IFNOT:CONTENT=Only Links|*

Rant
----------------------------------------------------
The random rant of the week by mose.

#### Innovation and Consensus

Last week I got to check out 2 javascript frontend frameworks, [Choo][choo]
(the cute framwework) and [Cycle.js][cyclejs] (the streams power). It feels
that nowadays React is eating the frontend world, but there is actually a lot
of non-marginal alternatives. It made me think that there is something tricky
with the process of innovation. It is born from disagreement. It feeds with
discontent.

Those frameworks are born from the refusal to consider React as a consensus,
hence it generates an alternative path, exploring different paradigms. In my
opinion, and from an global point of view, it's a sign of vivacity of an
ecosystem. Diversity of species guarantees a larger span of choice for the
natural selection and a faster evolution.

But consensus and normative approaches have so many virtues. Damn, this is
tricky. Well, here is the catch. Unicity in the software ecosystem creates
stability, which in turn creates comfort for the actors involved in the
industry. Habits get stronger, mobility is easier, interoperability leads to
bigger systems with long life-cycles. This is good.

On another hand diversity creates instability, challenges the developers and
makes it harder to find common grounds. It favors exploration and smaller
systems with shorter life-cycles. In a diverse ecosystem, paradigms and new
ideas are born and die quickly. And I think it's a much more rich ecosystem.

For some reason this duality reminds me of the cathedral and the bazaar. It's
totally unrelated, actually, but maybe there is some kind of interesting
parallel in this metaphor collision. But beyond that, there is a real
antagonism for developers, and an opposing interest between the development
workforce and the software as a living species.

And I have the feeling that on the long run, diversity and innovation win. So
you better get used to the discomfort it brings. Train yourself to jump from
one framework to another. Don't let yourself getting lazy by going to the
comfortable consensus systematically. This ability to cope with change is your
best hope for staying current. Because the change if the way of the evolution.

[choo]: https://github.com/yoshuawuyts/choo
[cyclejs]: http://cycle.js.org/ 

*|END:IF|*

====================================================
EOF

Feel free to send us feedback or information at
news@greenruby.org

follow on Twitter @greenrubist
forward to a friend *|FORWARD|*
Subscribe *|LIST:SUBSCRIBE|*

Copyright (c) *|CURRENT_YEAR|* Mose
http://creativecommons.org/licenses/by-sa/3.0/
This publication is licensed under a
Creative Commons Attribution-ShareAlike 3.0 License




