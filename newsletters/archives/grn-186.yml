---
edition: "186"
pubdate: "aug 28th 2016"
editors: "tysliu"
participants: "nauman, michaelweigle"
rant:
  author: mose
  content:
    "#### To be remote or not to be remote ...


Earlier this week I read [an article on linkedin, deliberately anti-remote][1], and a bit later on [another one very pro-remote on freecodecamp][2]. I'm tempted to think one is the response to the other. But maybe not. 


The fact is that switching to a remote organization is a tricky move. It feels like the move from monolith to micro-services, honestly. People that make decisions about it rarely envision the extent of the change. And those change look similar in nature. Team architecture and software design are not that foreign. More autonomy for services or people, self-contained activity, requirement for clear communication channels and protocols, extensive architecture for monitoring, reporting or just plain visibility, more debugging tools and processes, and much more.


The same way one will have to think about all those when switching to microservices, the one that thinks about making his team remote will also have to consider the exact same parameters. But that is all on the principles. About the implementation, remote teams really need a strong chat culture, an easy and transparent logging policy for all communication channels, various tooling similar to chatops tools for assisting communication activity. Remote organization also need to have all their processes online, and not need much (if at all) any synchronous meetings.


From my perspective there are various very beneficial side-effects to make a team remote. There is more traceability as everything is online and not in corridors anymore. In some cases that I experienced, it also leads to a less arbitrary perception on team members, because they can be judged more on results (if you have measure tools prepared accordingly) than on attitude and mouth-skills (did you noticed that irl meetings are sometimes just a mouth-o-cracy?). But it's accurate to say that on a short term, it is more time consuming. The real benefit rises on the long run.


What I didn't find in any articles on the matter, is the life-cycle dimension. A software project has a life expectancy, from a business point of view. It's the same game as with the technical debt. It is acceptable business-wise to live at credit for a time, until a certain milestone. A lot of projects are just extended MVPs intended to convince big money that they could deserve some attention. For such project, you want very fast paced environment. It's easier to coerce your <s>slaves</s> employees to go above and beyond the expectations, when in a physical environment. This is a disposable context, and you can skip team debt as much as technical debt. And you really need physicality for that purpose.


So, I would say, if a company is not making the move towards remote organization, maybe there are very good reasons for that. But I will be very cautious to understand what are the real reasons. They may stink. And if they are remote, but they just came to it recently, I would be careful about the tooling they prepared for it.


[1]: https://www.linkedin.com/pulse/do-work-from-home-oleg-vishnepolsky

[2]: https://medium.freecodecamp.com/the-economics-of-working-remotely-28d4173e16e2#.43ewevr3t
"

topics:

- title: Look
  baseline:
    "Examples of UI/UX, graphic performance, web design and flashy things."
  links:

  - title: "Femme Fatale Studio"
    url: "http://femmefatale.paris/en"
    comment: "french creative studio, somewhere between sophistication and simplicity"
    tags:
      - design

- title: Use
  baseline:
    "Web applications, resources and tools, available for making our life easier or funnier."
  links:

  - title: "cube composer"
    url: "http://david-peter.de/cube-composer/"
    comment: "Funny tiny game calling array manipulation logics."
    tags:
      - tool

  - title: "Managing Operations in Group Chat"
    url: "https://victorops.com/knowledge-drop/devops-docs/chatops-managing-operations-group-chat/"
    comment: "(book) ChatOps can increase your operational efficiency. Learn how in this free 75 page report from O'Reilly and VictorOps."
    tags:
      - ops

  - title: "Essential Electron"
    url: "http://jlord.us/essential-electron/"
    comment: "Quickstart your electron skills."
    tags:
      - js

  - title: "Itsy-bitsy-data-structures"
    url: "https://github.com/thejameskyle/itsy-bitsy-data-structures"
    comment: "All the things you didn't know you wanted to know about data structures"
    tags:
      - js

  - title: "Maintainers-wanted"
    url: "https://github.com/pickhardt/maintainers-wanted"
    comment: "List of projects looking for new lead maintainers, either abandoned or just looking for someone else to lead."
    tags:
      - tool

- title: Install
  baseline: "A selection of gems or applications updated during past week."
  links:

  - title: "Client_side_validations"
    url: "https://github.com/DavyJonesLocker/client_side_validations"
    comment: "Client Side Validations made easy for Ruby on Rails"
    tags:
      - rb

  - title: "Vizceral"
    url: "https://github.com/Netflix/vizceral"
    comment: "WebGL component for displaying animated traffic graphs"
    tags:
      - ops

- title: Read
  baseline: "From the blogosphere or news feeds ..."
  links:

  - title: "Journey of a Trailblazer (1)"
    url: "http://www.norydev.com/writing/journey-of-a-trailblazer-part-1"
    comment: "Looking for some standards and conventions to refactor?"
    pubdate: aug 21
    tags:
      - rb

  - title: "About Sinatra 2.0"
    url: "http://zzak.io/log/2016-08-22-sinatra-two-point-oh.html"
    comment: "Just released in beta, here is the huge list of changes."
    pubdate: aug 22
    tags:
      - rb

  - title: "Pure RSpec JSON API testing"
    url: "http://www.eq8.eu/blogs/30-native-rspec-json-api-testing"
    comment: "how to test JSON API in Ruby on Rails or in plain Ruby application with nothing more than RSpec 3.x"
    pubdate: aug 22
    tags:
      - rb

  - title: "The Pure Function As An Object (PFAAO) Pattern"
    url: "http://www.rubypigeon.com/posts/the-pure-function-as-an-object-pfaao-pattern/"
    comment: "In this article, I want to demonstrate a nice way to write functional-style code in Ruby."
    pubdate: aug 23
    tags:
      - rb

  - title: "10 reasons why you should give Elm a try"
    url: "https://medium.com/@tibastral/10-reasons-why-you-should-give-elm-a-try-62b56d305643"
    comment: "Totally subjective but convincing sales pitch for Elm."
    pubdate: "aug 23"
    tags:
      - js

  - title: "Hunting for great names in programming"
    url: "https://m.signalvnoise.com/hunting-for-great-names-in-programming-16f624c8fc03"
    comment: "One of the real delights of programming is picking great variable, method, and class names."
    pubdate: aug 23
    tags:
      - web

  - title: "Phoenix vs Rails: Views and helpers"
    url: "http://cloudless.studio/articles/25-phoenix-vs-rails-views-and-helpers"
    comment: "Here's an overview, case study and comparison to Phoenix of the V part of Rails MVC as experienced across the years."
    pubdate: aug 24
    tags:
      - el

  - title: "Document your Already Existing APIs with Swagger"
    url: "https://scotch.io/tutorials/document-your-already-existing-apis-with-swagger"
    comment: "Document APIs by editing a config file that is either json or yaml."
    pubdate: aug 25
    tags:
      - rb

  - title: "The State Of JavaScript: Front-End Frameworks"
    url: "https://medium.com/@sachagreif/the-state-of-javascript-front-end-frameworks-1a2d8a61510"
    comment: "A few preliminary results from a survey by Sacha Grief."
    pubdate: "aug 25"
    tags:
      - js

  - title: "Building Rails API's with JSONAPI and JSONAPI-Resources"
    url: "http://girders.org/blog/2016/08/26/building-rails-apis-with-jsonapi-and-jsonapi-resources/"
    comment: "JASONAPI is a fairly new protocol, but has been methodically designed to handle most use cases"
    pubdate: aug 26
    tags:
      - rb

  - title: "Using WebP Images"
    url: "https://css-tricks.com/using-webp-images/"
    comment: "WebP can yield a substantial reduction in the size of images on your website."
    pubdate: aug 26
    tags:
      - web

  - title: "From monolithics to microservices"
    url: "https://medium.com/@ccverak/from-monolithics-to-microservices-e87841ce11fd#.nr87tta4t"
    comment: "A software design approach to microservice evolution."
    pubdate: "aug 27"
    tags:
      - rb
